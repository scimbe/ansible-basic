---
- name: Xfce customizations
  hosts: localhost
  become: true
  vars:
    desktop_user: abc
    wallpaper:
      url: https://scimbe.de/wall/wallpaper-big.png
      path: /config/wallpaper-scimbe.png
    theme:
      repo: https://github.com/paullinuxthemer/PRO-Dark-XFCE-Edition/
      name: PRO-dark-XFCE-4.14
    gateway_ip: "{{ ansible_default_ipv4.gateway }}"
    ssh_port: "4040"
    # Variable für die Repo-Auswahl
    repo_option: "{{ repo_choice | default('none') }}"
  vars_prompt:
    - name: repo_choice
      prompt: "Welches Repository soll ausgecheckt werden? (0 für keins, VS_Pattern, VS_Script oder Alles)"
      private: no

  tasks:
    # Neue Tasks hinzugefügt: Verzeichnis erstellen und JDK installieren
    - name: Create man directory
      file:
        path: /usr/share/man/man1
        state: directory
        mode: '0755'
        recurse: yes  # Stellt sicher, dass alle übergeordneten Verzeichnisse erstellt werden
      
    - name: Show visual notification
      become_user: "{{ desktop_user }}"
      environment:
        DISPLAY: "{{ lookup('env', 'DISPLAY') }}"
      shell: |
        (
          xmessage -center "Ansible configuration in progress..." &
          echo $! > /tmp/notify.pid
        )
      async: 300
      poll: 0
      args:
        executable: /bin/bash
    
    - name: Ensure XFCE4 is running
      become_user: "{{ desktop_user }}"
      environment:
        DISPLAY: "{{ lookup('env', 'DISPLAY') }}"
        XAUTHORITY: "/home/{{ desktop_user }}/.Xauthority"
      shell: |
        pgrep xfce4-session || xfce4-session &
      async: 300
      poll: 0
      args:
        executable: /bin/bash
    
    - name: Wait for XFCE4 to start
      wait_for:
        timeout: 10
    
    - name: Configure desktop environment
      become_user: "{{ desktop_user }}"
      environment:
        DISPLAY: "{{ lookup('env', 'DISPLAY') }}"
        XAUTHORITY: "/home/{{ desktop_user }}/.Xauthority"
      block:
        - name: Download background
          get_url:
            url: "{{ wallpaper.url }}"
            dest: "{{ wallpaper.path }}"
            mode: '0666'
            force: no  # Überspringt den Download, wenn die Datei bereits existiert
    
        - name: Configure desktop icons
          xfconf:
            channel: xfce4-desktop
            property: "/desktop-icons/file-icons/show-{{ item }}"
            value_type: bool
            value: "false"
          loop:
            - removable
            - filesystem
            - home
    
        - name: Disable all desktop icons
          xfconf:
            channel: xfce4-desktop
            property: "/desktop-icons/style"
            value_type: int
            value: 0
            
        - name: Set wallpaper directly
          shell: |
            xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorVNC-0/workspace0/last-image -s "{{ wallpaper.path }}"
            xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorVNC-0/workspace1/last-image -s "{{ wallpaper.path }}"
            xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorVNC-0/workspace2/last-image -s "{{ wallpaper.path }}"
            xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorVNC-0/workspace3/last-image -s "{{ wallpaper.path }}"
          args:
            executable: /bin/bash
    
        - name: Kill existing xfdesktop process
          shell: killall xfdesktop || true
          ignore_errors: yes
    
        - name: Wait for process to end
          wait_for:
            timeout: 2
    
        - name: Start xfdesktop
          shell: xfdesktop &
          async: 300
          poll: 0
    
        - name: Start Conky
          shell: killall conky || true; nohup conky > /dev/null 2>&1 &
          args:
            chdir: "/"
            executable: /bin/bash
    
        - name: Setup theme
          block:
            - name: Clone theme repository
              git:
                repo: "{{ theme.repo }}"
                dest: /config/.themes
                clone: yes
                update: yes
    
            - name: Apply theme
              xfconf:
                channel: xsettings
                property: "/Net/ThemeName"
                value_type: string
                value: "{{ theme.name }}"
        
        # Überprüfen der Benutzereingabe und Wiederholung bei ungültiger Eingabe
        - name: Validate repository choice
          set_fact:
            valid_choice: "{{ true if repo_choice == '0' or repo_choice == 'VS_Pattern' or repo_choice == 'VS_Script' or repo_choice == 'Alles' else false }}"
            
        - name: Display invalid choice message and exit
          fail:
            msg: "Ungültige Auswahl. Bitte wählen Sie '0', 'VS_Pattern', 'VS_Script' oder 'Alles'."
          when: not valid_choice
        
        # VS_Pattern Repository auschecken
        - name: Clone VS_Pattern repository
          git:
            repo: https://github.com/scimbe/VS_Pattern_By_KI
            dest: /config/vs_pattern
            clone: yes
            recursive: yes  # Das --recurse-submodules Flag im git Befehl
            update: yes
          when: repo_choice == 'VS_Pattern' or repo_choice == 'Alles'
        
        # VS_Script Repository auschecken
        - name: Clone VS_Script repository
          git:
            repo: https://github.com/scimbe/vs_script
            dest: /config/vs_script
            clone: yes
            recursive: yes  # Das --recurse-submodules Flag im git Befehl
            update: yes
          when: repo_choice == 'VS_Script' or repo_choice == 'Alles'

        - name: Install default-jdk
          apt:
            name: default-jdk
            state: present
            update_cache: yes
            cache_valid_time: 3600  # Vermeidet unnötige Updates, wenn der Cache weniger als 1 Stunde alt ist
          when: repo_choice == 'VS_Pattern' or repo_choice == 'Alles'    


        - name: Remove notification
          shell: |
            if [ -f /tmp/notify.pid ]; then
              kill $(cat /tmp/notify.pid) || true
              rm /tmp/notify.pid
            fi
          args:
            executable: /bin/bash
