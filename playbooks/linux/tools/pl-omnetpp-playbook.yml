- name: Install OMNeT++ and INET Framework
  hosts: localhost
  become: yes
  vars:
    omnet_version: "6.1.0"
    omnet_dir: "6.1"
    omnet_install_path: "/headless/omnetpp"
    user: "mininet"
    desktop_user: "mininet"

  tasks:
    - name: Show visual notification
      become_user: "{{ desktop_user }}"
      environment:
        DISPLAY: ":1"
      shell: |
        (
          xmessage -center "Ansible configuration in progress..." &
          echo $! > /tmp/notify.pid
        )
      async: 300
      poll: 0

    - name: Determine system architecture
      command: uname -m
      register: arch_output
      changed_when: false

    - name: Set platform variable based on architecture
      set_fact:
        platform: "{{ 'linux-aarch64' if arch_output.stdout == 'aarch64' else 'linux-x86_64' }}"

    - name: Install required system packages
      apt:
        name:
          - ccache
          - clang
          - lld
          - gdb
          - bison
          - flex
          - perl
          - libxml2-dev
          - zlib1g-dev
          - doxygen
          - graphviz
          - xdg-utils
          - libdw-dev
          - openjdk-17-jdk
          - qtbase5-dev
          - qtchooser
          - qtcreator
          - qtcreator-data
          - qtcreator-doc
          - qtbase5-examples
          - qt5-qmake
          - qtbase5-private-dev
          - cmake
          - qtbase5-dev-tools
          - libqt5svg5
          - libqt5opengl5-dev
          - qtwayland5
          - libwebkit2gtk-4.1-0
        state: present
        update_cache: yes

    - name: Download OMNeT++
      become_user: "{{ desktop_user }}"
      get_url:
        url: "https://github.com/omnetpp/omnetpp/releases/download/omnetpp-{{ omnet_version }}/omnetpp-{{ omnet_version }}-{{ platform }}.tgz"
        dest: "/headless/omnetpp-core.tgz"
        mode: '0644'

    - name: Extract OMNeT++
      become_user: "{{ desktop_user }}"
      unarchive:
        src: "/headless/omnetpp-core.tgz"
        dest: "/headless"
        remote_src: yes

    - name: Rename and set permissions
      become_user: "{{ desktop_user }}"
      command: mv /headless/omnetpp-{{  omnet_dir }} /headless/omnetpp

    - name: Configure OMNeT++
      become_user: "{{ desktop_user }}"
      shell: |
        cd /headless/omnetpp
        python3 -m venv /opt/venv
        export PATH="/opt/venv/bin:$PATH"
        pip install --no-cache-dir --upgrade pip 
        export CCACHE_DIR=/headless/.cache/ccache
        export PATH="/usr/lib/ccache:/headless/omnetpp/bin:${PATH}"
        mkdir -p ${CCACHE_DIR}
        ccache --max-size=5G
        python3 -m venv .venv 
        . .venv/bin/activate
        pip install --upgrade pip setuptools wheel
        if [ -f python/requirements.txt ]; then pip install -r python/requirements.txt; fi
        if [ -f setenv ]; then . ./setenv; fi 
        ./configure WITH_OSG=no

    - name: Build OMNeT++
      become_user: "{{ desktop_user }}"
      command: make -j$(nproc)
      args:
        chdir: "/headless/omnetpp"

    - name: Set environment variables
      become_user: "{{ desktop_user }}"
      lineinfile:
        path: "/headless/.bashrc"
        line: |
          export PATH="/headless/omnetpp/bin:$PATH"
          export LD_LIBRARY_PATH="/headless/omnetpp/lib:$LD_LIBRARY_PATH"
        insertafter: EOF
        create: yes

    - name: Install INET Framework
      become_user: "{{ desktop_user }}"
      git:
        repo: "https://github.com/inet-framework/inet.git"
        dest: "/headless/inet"
        version: "v4.4"

    - name: Build INET Framework
      become_user: "{{ desktop_user }}"
      shell: |
        cd /headless/inet
        . /headless/omnetpp/setenv
        make makefiles
        make -j$(nproc)

    - name: Cleanup temporary files
      become_user: "{{ desktop_user }}"
      file:
        path: "/headless/omnetpp-core.tgz"
        state: absent

    - name: Remove notification
      become_user: "{{ desktop_user }}"
      environment:
        DISPLAY: ":1"
      shell: |
        if [ -f /tmp/notify.pid ]; then
          kill $(cat /tmp/notify.pid) || true
          rm /tmp/notify.pid
        fi
