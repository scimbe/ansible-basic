- name: Install OMNeT++ and INET Framework
  hosts: localhost
  become: yes
  vars:
    omnet_version: "6.1.0"
    omnet_install_path: "/headless/omnetpp"
    user: "mininet"

  tasks:
    - name: Show visual notification
       become_user: "{{ desktop_user }}"
       environment:
         DISPLAY: ":1"
       shell: |
         (
           xmessage -center "Ansible configuration in progress..." &
           echo $! > /tmp/notify.pid
         )
       async: 300
       poll: 0
       
    - name: Determine system architecture
      command: uname -m
      register: arch_output
      changed_when: false

    - name: Set platform variable based on architecture
      set_fact:
        platform: "{{ 'linux-aarch64' if arch_output.stdout == 'aarch64' else 'linux-x86_64' }}"

    - name: Install required system packages
      apt:
        name:
          - ccache
          - clang
          - lld
          - gdb
          - bison
          - flex
          - perl
          - libxml2-dev
          - zlib1g-dev
          - doxygen
          - graphviz
          - xdg-utils
          - libdw-dev
          - openjdk-17-jdk
          - qtbase5-dev
          - qtchooser
          - qtcreator
          - qtcreator-data
          - qtcreator-doc
          - qtbase5-examples
          - qt5-qmake
          - qtbase5-private-dev
          - cmake
          - qtbase5-dev-tools
          - libqt5svg5
          - libqt5opengl5-dev
          - qtwayland5
          - libwebkit2gtk-4.1-0
        state: present
        update_cache: yes

    - name: Create user headless directory if not exists
      file:
        path: "/headless"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Download OMNeT++
      become_user: "{{ user }}"
      get_url:
        url: "https://github.com/omnetpp/omnetpp/releases/download/omnetpp-{{ omnet_version }}/omnetpp-{{ omnet_version }}-{{ platform }}.tgz"
        dest: "/headless/omnetpp-core.tgz"
        mode: '0644'

    - name: Extract OMNeT++
      become_user: "{{ user }}"
      unarchive:
        src: "/headless/omnetpp-core.tgz"
        dest: "/headless"
        remote_src: yes

    - name: Rename and set permissions
      become_user: "{{ user }}"
      command: mv /headless/omnetpp-{{ omnet_version }} /headless/omnetpp

    - name: Configure OMNeT++
      become_user: "{{ user }}"
      shell: |
        cd /headless/omnetpp
        ./configure WITH_OSG=no

    - name: Build OMNeT++
      become_user: "{{ user }}"
      command: make -j$(nproc)
      args:
        chdir: "/headless/omnetpp"

    - name: Set environment variables
      lineinfile:
        path: "/headless/.bashrc"
        line: |
          export PATH="/headless/omnetpp/bin:$PATH"
          export LD_LIBRARY_PATH="/headless/omnetpp/lib:$LD_LIBRARY_PATH"
        create: yes

    - name: Install INET Framework
      become_user: "{{ user }}"
      git:
        repo: "https://github.com/inet-framework/inet.git"
        dest: "/headless/inet"
        version: "v4.4"

    - name: Build INET Framework
      become_user: "{{ user }}"
      shell: |
        cd /headless/inet
        . /headless/omnetpp/setenv
        make makefiles
        make -j$(nproc)

    - name: Cleanup temporary files
      file:
        path: "/headless/omnetpp-core.tgz"
        state: absent

     - name: Remove notification
       become_user: "{{ desktop_user }}"
       environment:
         DISPLAY: ":1"
       shell: |
         if [ -f /tmp/notify.pid ]; then
           kill $(cat /tmp/notify.pid) || true
           rm /tmp/notify.pid
         fi
